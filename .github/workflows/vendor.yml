name: vendor-docs
on:
  workflow_call:
    inputs:
      ref:
        description: "Leyline tag"
        required: true
        type: string
      categories:
        description: "Comma-separated list of categories to sync (e.g., go,typescript,frontend)"
        required: false
        type: string
        default: ""
      override_languages:
        description: "Override language detection (comma-separated list)"
        required: false
        type: string
      override_contexts:
        description: "Override context detection (comma-separated list)"
        required: false
        type: string
jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4   # consumer repo
    - name: Clone Leyline
      uses: actions/checkout@v4
      with:
        repository: phrazzld/leyline
        ref: ${{ inputs.ref }}
        path: _leyline

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq ruby

    - name: Detect Languages and Contexts
      run: |
        # Copy detection script to workspace
        cp _leyline/.github/scripts/detect-languages.sh .
        chmod +x detect-languages.sh

        # Run detection
        ./detect-languages.sh

        # Handle overrides if provided
        if [ -n "${{ inputs.override_languages }}" ]; then
          echo "Overriding detected languages with: ${{ inputs.override_languages }}"
          languages=$(echo "${{ inputs.override_languages }}" | tr ',' '\n' | jq -R . | jq -s .)
          jq --argjson langs "$languages" '.languages = $langs' repo-context.json > repo-context.json.tmp
          mv repo-context.json.tmp repo-context.json
        fi

        if [ -n "${{ inputs.override_contexts }}" ]; then
          echo "Overriding detected contexts with: ${{ inputs.override_contexts }}"
          contexts=$(echo "${{ inputs.override_contexts }}" | tr ',' '\n' | jq -R . | jq -s .)
          jq --argjson ctxs "$contexts" '.contexts = $ctxs' repo-context.json > repo-context.json.tmp
          mv repo-context.json.tmp repo-context.json
        fi

        # Show final configuration
        echo "Final repository context configuration:"
        cat repo-context.json

    - name: Filter Bindings
      run: |
        # Copy filter script to workspace
        cp _leyline/.github/scripts/filter-bindings.rb .
        chmod +x filter-bindings.rb

        # Run filtering
        ./filter-bindings.rb

    - name: Sync Files
      run: |
        mkdir -p docs/tenets docs/bindings/core docs/bindings/categories

        # Always sync all tenets (they're language-agnostic)
        rsync -a --delete _leyline/docs/tenets/ docs/tenets/

        # Always sync core bindings (applicable to all)
        rsync -a --delete _leyline/docs/bindings/core/ docs/bindings/core/

        # Process requested categories
        if [ -n "${{ inputs.categories }}" ]; then
          echo "Syncing requested categories: ${{ inputs.categories }}"

          # Create array from comma-separated list
          IFS=',' read -ra CATEGORIES <<< "${{ inputs.categories }}"

          # Initialize arrays to track synced and missing categories
          SYNCED_CATEGORIES=()
          MISSING_CATEGORIES=()

          # Process each category
          for category in "${CATEGORIES[@]}"; do
            # Trim whitespace
            category=$(echo "$category" | xargs)

            # Check if category directory exists
            if [ -d "_leyline/docs/bindings/categories/$category" ]; then
              echo "Syncing category: $category"
              SYNCED_CATEGORIES+=("$category")

              # Create target directory
              mkdir -p "docs/bindings/categories/$category"

              # Sync category files
              rsync -a --delete "_leyline/docs/bindings/categories/$category/" "docs/bindings/categories/$category/"
            else
              echo "⚠️ WARNING: Category directory for '$category' does not exist in Leyline"
              MISSING_CATEGORIES+=("$category")
            fi
          done

          # Summarize results
          if [ ${#SYNCED_CATEGORIES[@]} -gt 0 ]; then
            echo "✅ Successfully synced ${#SYNCED_CATEGORIES[@]} categories: ${SYNCED_CATEGORIES[*]}"
          else
            echo "ℹ️ No categories were synced"
          fi

          if [ ${#MISSING_CATEGORIES[@]} -gt 0 ]; then
            echo "⚠️ WARNING: ${#MISSING_CATEGORIES[@]} requested categories were not found: ${MISSING_CATEGORIES[*]}"
            echo "::warning::The following requested categories do not exist in Leyline: ${MISSING_CATEGORIES[*]}"
            # Save to file for later use in PR body
            printf "%s\n" "${MISSING_CATEGORIES[@]}" > missing-categories.txt
          fi
        else
          echo "No specific categories requested, syncing only core bindings"
        fi

        # For backward compatibility, also sync filtered bindings (this will be removed in a future update)
        if [ -d "filtered_bindings" ]; then
          rsync -a filtered_bindings/ docs/bindings/
        fi

    - name: Create Summary
      run: |
        echo "# Leyline Sync Summary" > sync-summary.md
        echo "" >> sync-summary.md
        echo "## Repository Context" >> sync-summary.md
        echo "" >> sync-summary.md
        echo "Detected languages: $(jq -r '.languages | join(", ")' repo-context.json)" >> sync-summary.md
        echo "Detected contexts: $(jq -r '.contexts | join(", ")' repo-context.json)" >> sync-summary.md
        if [ -n "${{ inputs.categories }}" ]; then
          echo "Requested categories: ${{ inputs.categories }}" >> sync-summary.md
        fi
        echo "" >> sync-summary.md

        echo "## Synced Files" >> sync-summary.md
        echo "" >> sync-summary.md
        echo "- Tenets: $(find docs/tenets -type f -name "*.md" | wc -l)" >> sync-summary.md
        echo "- Core Bindings: $(find docs/bindings/core -type f -name "*.md" | wc -l)" >> sync-summary.md

        # Count category bindings if any were synced
        if [ -n "${{ inputs.categories }}" ]; then
          echo "- Category Bindings:" >> sync-summary.md

          # Check each requested category
          IFS=',' read -ra CATEGORIES <<< "${{ inputs.categories }}"

          # Track counts for summary
          synced_count=0
          missing_count=0

          for category in "${CATEGORIES[@]}"; do
            category=$(echo "$category" | xargs)
            if [ -d "docs/bindings/categories/$category" ]; then
              count=$(find "docs/bindings/categories/$category" -type f -name "*.md" | wc -l)
              echo "  - $category: $count" >> sync-summary.md
              synced_count=$((synced_count + 1))
            else
              echo "  - $category: ⚠️ Not found" >> sync-summary.md
              missing_count=$((missing_count + 1))
            fi
          done

          # Add summary of category sync status
          echo "" >> sync-summary.md
          echo "**Category Summary:**" >> sync-summary.md
          echo "- Categories requested: ${#CATEGORIES[@]}" >> sync-summary.md
          echo "- Categories found and synced: $synced_count" >> sync-summary.md

          if [ $missing_count -gt 0 ]; then
            echo "- Categories not found: $missing_count" >> sync-summary.md
            echo "" >> sync-summary.md
            echo "⚠️ Some requested categories were not found. Please check the spelling or verify they are available in the Leyline repository." >> sync-summary.md
          fi
        else
          echo "- Category Bindings: None requested" >> sync-summary.md
        fi

        # Total bindings count
        total_bindings=$(find docs/bindings -type f -name "*.md" | wc -l)
        echo "- Total Bindings: $total_bindings" >> sync-summary.md

        cat sync-summary.md

    - name: Commit
      run: |
        git config user.name  "Leyline Warden"
        git config user.email "leyline-warden@users.noreply.github.com"
        git add docs/tenets docs/bindings || true

        # Create commit message with category info if specified
        commit_msg="docs: sync Leyline ${{ inputs.ref }}"
        if [ -n "${{ inputs.categories }}" ]; then
          commit_msg="$commit_msg with categories: ${{ inputs.categories }}"
        fi

        if ! git diff --cached --quiet; then
          git commit -m "$commit_msg"
        fi

    - name: Generate PR Body
      run: |
        echo "Automated vendor update by Leyline Warden." > pr-body.md
        echo "" >> pr-body.md
        echo "This update syncs:" >> pr-body.md
        echo "- All tenets" >> pr-body.md
        echo "- Core bindings (applicable to all projects)" >> pr-body.md

        # Add requested categories information
        if [ -n "${{ inputs.categories }}" ]; then
          echo "- Requested categories: ${{ inputs.categories }}" >> pr-body.md

          # Add warning about missing categories if any
          if [ -f "missing-categories.txt" ]; then
            echo "" >> pr-body.md
            echo "⚠️ **WARNING:** The following requested categories were not found:" >> pr-body.md
            echo "```" >> pr-body.md
            cat missing-categories.txt >> pr-body.md
            echo "```" >> pr-body.md
            echo "Please verify the spelling of these categories or check if they are available in the Leyline repository." >> pr-body.md
          fi
        fi

        echo "" >> pr-body.md
        cat sync-summary.md >> pr-body.md

    - name: Push PR
      uses: peter-evans/create-pull-request@v6
      with:
        title: "docs: sync Leyline ${{ inputs.ref }}"
        body-path: pr-body.md
