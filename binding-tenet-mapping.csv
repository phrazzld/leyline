binding_id,tenet_id,binding_path
api-design,explicit-over-implicit,docs/bindings/core/api-design.md
automate-changelog,automation,docs/bindings/core/automate-changelog.md
code-size,simplicity,docs/bindings/core/code-size.md
code-size,modularity,docs/bindings/core/code-size.md
component-architecture,modularity,docs/bindings/core/component-architecture.md
context-propagation,explicit-over-implicit,docs/bindings/core/context-propagation.md
dependency-inversion,testability,docs/bindings/core/dependency-inversion.md
dependency-management,simplicity,docs/bindings/core/dependency-management.md
dependency-management,automation,docs/bindings/core/dependency-management.md
external-configuration,no-secret-suppression,docs/bindings/core/external-configuration.md
hex-domain-purity,simplicity,docs/bindings/core/hex-domain-purity.md
immutable-by-default,simplicity,docs/bindings/core/immutable-by-default.md
no-internal-mocking,testability,docs/bindings/core/no-internal-mocking.md
no-lint-suppression,no-secret-suppression,docs/bindings/core/no-lint-suppression.md
pure-functions,simplicity,docs/bindings/core/pure-functions.md
pure-functions,testability,docs/bindings/core/pure-functions.md
require-conventional-commits,automation,docs/bindings/core/require-conventional-commits.md
semantic-versioning,explicit-over-implicit,docs/bindings/core/semantic-versioning.md
use-structured-logging,automation,docs/bindings/core/use-structured-logging.md
async-patterns,simplicity,docs/bindings/categories/typescript/async-patterns.md
concurrency-patterns,simplicity,docs/bindings/categories/go/concurrency-patterns.md
error-handling,simplicity,docs/bindings/categories/rust/error-handling.md
error-handling,explicit-over-implicit,docs/bindings/categories/rust/error-handling.md
error-wrapping,explicit-over-implicit,docs/bindings/categories/go/error-wrapping.md
interface-design,testability,docs/bindings/categories/go/interface-design.md
module-organization,modularity,docs/bindings/categories/typescript/module-organization.md
no-any,explicit-over-implicit,docs/bindings/categories/typescript/no-any.md
ownership-patterns,simplicity,docs/bindings/categories/rust/ownership-patterns.md
package-design,modularity,docs/bindings/categories/go/package-design.md
state-management,simplicity,docs/bindings/categories/frontend/state-management.md
web-accessibility,explicit-over-implicit,docs/bindings/categories/frontend/web-accessibility.md
